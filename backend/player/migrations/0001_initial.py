# Generated by Django 2.1.2 on 2018-10-13 09:52

import annoying.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import player.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('badge', '0001_initial'),
        ('guild', '0001_initial'),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone', models.CharField(max_length=15, unique=True, validators=[player.models.is_phone_number], verbose_name='手机号')),
                ('is_staff', models.BooleanField(default=False, help_text='是否可以登录后台', verbose_name='职员状态')),
                ('is_active', models.BooleanField(default=True, help_text='指明用户是否被认为活跃的。以反选代替删除帐号。', verbose_name='启用帐号')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='加入日期')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', player.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ppoint', models.IntegerField(verbose_name='P点')),
                ('jiecao', models.IntegerField(verbose_name='节操')),
                ('games', models.IntegerField(verbose_name='游戏数')),
                ('drops', models.IntegerField(verbose_name='逃跑数')),
            ],
            options={
                'verbose_name': '积分',
                'verbose_name_plural': '积分',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='昵称')),
                ('forum_id', models.IntegerField(blank=True, null=True, unique=True, verbose_name='论坛ID')),
                ('bio', models.CharField(blank=True, max_length=150, verbose_name='签名')),
                ('badges', models.ManyToManyField(related_name='players', to='badge.Badge', verbose_name='勋章')),
                ('blocks', models.ManyToManyField(related_name='_player_blocks_+', to='player.Player', verbose_name='黑名单')),
                ('friends', models.ManyToManyField(related_name='_player_friends_+', to='player.Player', verbose_name='好友')),
                ('guild', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='guild.Guild', verbose_name='势力')),
                ('user', annoying.fields.AutoOneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '玩家',
                'verbose_name_plural': '玩家',
            },
        ),
        migrations.AddField(
            model_name='credit',
            name='player',
            field=annoying.fields.AutoOneToOneField(on_delete=django.db.models.deletion.CASCADE, to='player.Player', verbose_name='玩家'),
        ),
    ]
